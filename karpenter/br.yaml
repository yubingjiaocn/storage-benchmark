apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: bottlerocket
spec:
  template:
    metadata:
      labels:
        launch: Karpenter
        os: Bottlerocket
    spec:
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: bottlerocket
      requirements:
        - key: "topology.kubernetes.io/zone"
          operator: In
          values: ["us-west-2c"]
        - key: "node.kubernetes.io/instance-type"
          operator: In
          values: ["g5.4xlarge"]
        - key: "karpenter.sh/capacity-type"
          operator: In
          values: ["on-demand"]
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 10s
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: bottlerocket
spec:
  amiFamily: Bottlerocket
  subnetSelectorTerms:
    - tags:
        eksctl.cluster.k8s.io/v1alpha1/cluster-name: dev-cluster
        kubernetes.io/role/internal-elb: "1"

  securityGroupSelectorTerms:
    - tags:
        kubernetes.io/cluster/dev-cluster: owned

  role: "KarpenterNodeRole-dev-cluster"

  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required

  blockDeviceMappings:
    - deviceName: /dev/xvdb
      ebs:
        volumeSize: 100Gi
        volumeType: gp3
        iops: 16000
        throughput: 1000
  detailedMonitoring: true