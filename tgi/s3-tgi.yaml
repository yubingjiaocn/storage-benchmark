apiVersion: v1
kind: PersistentVolume
metadata:
  name: s3-pv
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - allow-delete
    - allow-other
    - allow-overwrite
    - file-mode=777
    - dir-mode=777
  csi:
    driver: s3.csi.aws.com # required
    volumeHandle: s3-csi-driver-volume
    volumeAttributes:
      bucketName: bingjiao-llama2-pfx
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3-claim
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 100Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tgi-s3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tgi-s3
      test: tgi
  template:
    metadata:
      labels:
        app: tgi-s3
        test: tgi
    spec:
      nodeSelector:
        launch: Karpenter
        os: Bottlerocket
      containers:
      - name: text-generation-inference
        image: ghcr.io/huggingface/text-generation-inference:2.1.0
        args: ["--model-id", "/data/Llama-2-7b-chat-hf"]
        ports:
        - containerPort: 80
        volumeMounts:
        - name: model-data
          mountPath: /data
        resources:
          requests:
            nvidia.com/gpu: 1
          limits:
            nvidia.com/gpu: 1
      volumes:
      - name: model-data
        persistentVolumeClaim:
          claimName: s3-claim
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: test
                operator: In
                values:
                - tgi
            topologyKey: kubernetes.io/hostname
